/* Mobile-Specific Animations */
/* Optimized for performance on mobile devices */

/* Enable hardware acceleration */
.mobile-animated {
  will-change: transform;
  transform: translateZ(0);
  backface-visibility: hidden;
}

/* Slide animations */
@keyframes slideInUp {
  from {
    transform: translate3d(0, 100%, 0);
    opacity: 0;
  }
  to {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}

@keyframes slideInDown {
  from {
    transform: translate3d(0, -100%, 0);
    opacity: 0;
  }
  to {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}

@keyframes slideInLeft {
  from {
    transform: translate3d(-100%, 0, 0);
    opacity: 0;
  }
  to {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from {
    transform: translate3d(100%, 0, 0);
    opacity: 0;
  }
  to {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}

/* Scale animations */
@keyframes scaleIn {
  from {
    transform: scale3d(0.8, 0.8, 1);
    opacity: 0;
  }
  to {
    transform: scale3d(1, 1, 1);
    opacity: 1;
  }
}

@keyframes scaleOut {
  from {
    transform: scale3d(1, 1, 1);
    opacity: 1;
  }
  to {
    transform: scale3d(0.8, 0.8, 1);
    opacity: 0;
  }
}

/* Bounce animations */
@keyframes bounceIn {
  0% {
    transform: scale3d(0.3, 0.3, 1);
    opacity: 0;
  }
  50% {
    transform: scale3d(1.05, 1.05, 1);
  }
  70% {
    transform: scale3d(0.95, 0.95, 1);
  }
  100% {
    transform: scale3d(1, 1, 1);
    opacity: 1;
  }
}

/* Fade animations */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* Touch feedback animation */
@keyframes touchRipple {
  0% {
    transform: scale(0);
    opacity: 0.8;
  }
  100% {
    transform: scale(4);
    opacity: 0;
  }
}

/* Pull to refresh animation */
@keyframes pullRotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Loading dots animation */
@keyframes loadingDots {
  0%, 20% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.5;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Animation classes */
.slide-in-up {
  animation: slideInUp 300ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.slide-in-down {
  animation: slideInDown 300ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.slide-in-left {
  animation: slideInLeft 300ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.slide-in-right {
  animation: slideInRight 300ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.scale-in {
  animation: scaleIn 200ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.scale-out {
  animation: scaleOut 200ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.bounce-in {
  animation: bounceIn 600ms cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
}

.fade-in {
  animation: fadeIn 200ms ease-in forwards;
}

.fade-out {
  animation: fadeOut 200ms ease-out forwards;
}

/* Touch ripple effect */
.ripple-container {
  position: relative;
  overflow: hidden;
}

.ripple {
  position: absolute;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.6);
  animation: touchRipple 600ms ease-out;
  pointer-events: none;
}

/* Pull to refresh */
.pull-to-refresh {
  position: relative;
  overflow: hidden;
}

.pull-to-refresh-icon {
  position: absolute;
  top: -40px;
  left: 50%;
  transform: translateX(-50%);
  width: 32px;
  height: 32px;
  opacity: 0;
  transition: opacity 200ms ease-out;
}

.pull-to-refresh-icon.visible {
  opacity: 1;
}

.pull-to-refresh-icon.refreshing {
  animation: pullRotate 1s linear infinite;
}

/* Loading dots */
.loading-dots {
  display: flex;
  gap: 4px;
}

.loading-dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--color-primary);
  animation: loadingDots 1.4s ease-in-out infinite;
}

.loading-dot:nth-child(2) {
  animation-delay: 0.2s;
}

.loading-dot:nth-child(3) {
  animation-delay: 0.4s;
}

/* Page transitions */
.page-transition-enter {
  opacity: 0;
  transform: translate3d(100%, 0, 0);
}

.page-transition-enter-active {
  opacity: 1;
  transform: translate3d(0, 0, 0);
  transition: opacity 300ms, transform 300ms;
}

.page-transition-exit {
  opacity: 1;
  transform: translate3d(0, 0, 0);
}

.page-transition-exit-active {
  opacity: 0;
  transform: translate3d(-20%, 0, 0);
  transition: opacity 300ms, transform 300ms;
}

/* Card press animation */
.card-press {
  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);
}

.card-press:active {
  transform: scale(0.95);
}

/* Tab indicator animation */
.tab-indicator {
  position: absolute;
  bottom: 0;
  height: 3px;
  background: var(--color-primary);
  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform;
}

/* Skeleton shimmer for mobile */
@keyframes mobileShimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

.mobile-skeleton {
  background: linear-gradient(
    90deg,
    var(--color-gray-200) 0%,
    var(--color-gray-100) 50%,
    var(--color-gray-200) 100%
  );
  background-size: 200% 100%;
  animation: mobileShimmer 1.5s ease-in-out infinite;
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
  
  .mobile-animated {
    will-change: auto;
  }
}

/* Mobile-only animations */
@media (hover: none) and (pointer: coarse) {
  /* Faster animations for mobile */
  .slide-in-up,
  .slide-in-down,
  .slide-in-left,
  .slide-in-right {
    animation-duration: 250ms;
  }
  
  .scale-in,
  .scale-out,
  .fade-in,
  .fade-out {
    animation-duration: 150ms;
  }
  
  /* Touch feedback for all interactive elements */
  button,
  a,
  .clickable,
  [role="button"] {
    position: relative;
    overflow: hidden;
  }
  
  button::after,
  a::after,
  .clickable::after,
  [role="button"]::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(0, 0, 0, 0.1);
    transform: translate(-50%, -50%);
    transition: width 300ms, height 300ms;
  }
  
  button:active::after,
  a:active::after,
  .clickable:active::after,
  [role="button"]:active::after {
    width: 100%;
    height: 100%;
  }
}

/* Gesture hints */
.swipe-hint {
  position: relative;
  overflow: hidden;
}

.swipe-hint::before {
  content: '';
  position: absolute;
  top: 50%;
  left: -100%;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, transparent, var(--color-primary), transparent);
  animation: swipeHint 2s ease-in-out infinite;
  animation-delay: 1s;
}

@keyframes swipeHint {
  0% {
    left: -100%;
  }
  50% {
    left: 100%;
  }
  100% {
    left: 100%;
  }
}